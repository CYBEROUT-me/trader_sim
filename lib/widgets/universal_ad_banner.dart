import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

/// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –±–∞–Ω–Ω–µ—Ä–∞ –±–µ–∑ overflow
class UniversalAdBanner extends StatelessWidget {
  final String text;
  final String buttonText;
  final VoidCallback? onButtonPressed;
  final VoidCallback? onDismiss;
  final bool dismissible;
  final Color? backgroundColor;
  final Color? buttonColor;
  final IconData? icon;

  const UniversalAdBanner({
    super.key,
    required this.text,
    required this.buttonText,
    this.onButtonPressed,
    this.onDismiss,
    this.dismissible = true,
    this.backgroundColor,
    this.buttonColor,
    this.icon,
  });

  @override
  Widget build(BuildContext context) {
    return Container(
      constraints: const BoxConstraints(
        minHeight: 40,
        maxHeight: 50, // –£–º–µ–Ω—å—à–∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É
      ),
      margin: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          colors: [
            (backgroundColor ?? const Color(0xFFF0B90B)).withOpacity(0.1),
            (backgroundColor ?? const Color(0xFF02C076)).withOpacity(0.1),
          ],
        ),
        borderRadius: BorderRadius.circular(8),
        border: Border.all(
          color: (backgroundColor ?? const Color(0xFFF0B90B)).withOpacity(0.5),
        ),
      ),
      child: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 6), // –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
        child: Row(
          children: [
            // –ò–∫–æ–Ω–∫–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            if (icon != null) ...[
              Icon(
                icon,
                color: backgroundColor ?? const Color(0xFFF0B90B),
                size: 16, // –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä –∏–∫–æ–Ω–∫–∏
              ),
              const SizedBox(width: 6),
            ],
            
            // –¢–µ–∫—Å—Ç
            Expanded(
              child: Text(
                text,
                style: TextStyle(
                  color: backgroundColor ?? const Color(0xFFF0B90B),
                  fontWeight: FontWeight.bold,
                  fontSize: 11, // –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
                  height: 1.2, // –î–æ–±–∞–≤–∏–ª–∏ –≤—ã—Å–æ—Ç—É —Å—Ç—Ä–æ–∫–∏
                ),
                overflow: TextOverflow.ellipsis,
                maxLines: 1, // –û–≥—Ä–∞–Ω–∏—á–∏–ª–∏ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π
              ),
            ),
            
            const SizedBox(width: 6),
            
            // –ö–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
            if (onButtonPressed != null)
              ElevatedButton(
                onPressed: () {
                  HapticFeedback.lightImpact();
                  onButtonPressed!();
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: buttonColor ?? const Color(0xFFF0B90B),
                  padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4), // –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
                  minimumSize: const Size(60, 28), // –£–º–µ–Ω—å—à–∏–ª–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(6),
                  ),
                ),
                child: Text(
                  buttonText,
                  style: const TextStyle(
                    fontSize: 9, // –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –∫–Ω–æ–ø–∫–∏
                    color: Colors.black,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
            
            // –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            if (dismissible && onDismiss != null) ...[
              const SizedBox(width: 4),
              GestureDetector(
                onTap: onDismiss,
                child: Container(
                  padding: const EdgeInsets.all(2),
                  child: Icon(
                    Icons.close,
                    size: 14, // –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä –∏–∫–æ–Ω–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
                    color: Colors.grey[600],
                  ),
                ),
              ),
            ],
          ],
        ),
      ),
    );
  }
}

/// –§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤
class AdBannerFactory {
  
  /// –ë–∞–Ω–Ω–µ—Ä –¥–ª—è –ø—Ä–µ–º–∏—É–º —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
  static Widget premiumStrategies({VoidCallback? onTap, VoidCallback? onDismiss}) {
    return UniversalAdBanner(
      text: 'üöÄ –ü—Ä–µ–º–∏—É–º',
      buttonText: '–û–¢–ö–†–´–¢–¨',
      icon: Icons.trending_up,
      onButtonPressed: onTap,
      onDismiss: onDismiss,
    );
  }
  
  /// –ë–∞–Ω–Ω–µ—Ä –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞/–ø—Ä–µ—Å—Ç–∏–∂–∞
  static Widget prestigeBanner({VoidCallback? onTap}) {
    return UniversalAdBanner(
      text: 'üíé –ü–æ–≤—ã—à–∞–π —Å—Ç–∞—Ç—É—Å - –æ—Ç–∫—Ä—ã–≤–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏',
      buttonText: '–ü–†–ï–°–¢–ò–ñ',
      icon: Icons.diamond,
      backgroundColor: const Color(0xFFF0B90B),
      onButtonPressed: onTap,
      dismissible: false,
    );
  }
  
  /// –ë–∞–Ω–Ω–µ—Ä –¥–ª—è —Å–æ–±—ã—Ç–∏–π
  static Widget eventsBanner({VoidCallback? onTap, VoidCallback? onDismiss}) {
    return UniversalAdBanner(
      text: 'üéÆ –°–æ–±—ã—Ç–∏—è –∏ –Ω–∞–≥—Ä–∞–¥—ã –∂–¥—É—Ç!',
      buttonText: '–ü–û–õ–£–ß–ò–¢–¨',
      icon: Icons.event,
      backgroundColor: const Color(0xFF02C076),
      onButtonPressed: onTap,
      onDismiss: onDismiss,
    );
  }
  
  /// –ë–∞–Ω–Ω–µ—Ä –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏
  static Widget tradingBanner({VoidCallback? onTap, VoidCallback? onDismiss}) {
    return UniversalAdBanner(
      text: 'üìà –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏',
      buttonText: '–£–ó–ù–ê–¢–¨',
      icon: Icons.trending_up,
      backgroundColor: const Color(0xFF02C076),
      onButtonPressed: onTap,
      onDismiss: onDismiss,
    );
  }
  
  /// –ë–∞–Ω–Ω–µ—Ä –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
  static Widget cryptoBanner({VoidCallback? onTap, VoidCallback? onDismiss}) {
    return UniversalAdBanner(
      text: 'üí∞ –õ—É—á—à–∏–µ –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª—å–∫–∏ 2025',
      buttonText: '–°–ú–û–¢–†–ï–¢–¨',
      icon: Icons.account_balance_wallet,
      onButtonPressed: onTap,
      onDismiss: onDismiss,
    );
  }
  
  /// –ò–Ω—Ç–µ—Ä—Å—Ç–∏—Ü–∏–∞–ª—å–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞ (–ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–∞—è)
  static Widget interstitialAd({
    required String title,
    required String description,
    required String buttonText,
    VoidCallback? onButtonPressed,
    VoidCallback? onDismiss,
  }) {
    return Container(
      constraints: const BoxConstraints(maxHeight: 70), // –£–º–µ–Ω—å—à–∏–ª–∏ –≤—ã—Å–æ—Ç—É
      color: const Color(0xFF1E2329),
      child: SafeArea(
        child: Padding(
          padding: const EdgeInsets.all(6), // –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
          child: Row(
            children: [
              Expanded(
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      title,
                      style: const TextStyle(
                        color: Color(0xFFF0B90B),
                        fontWeight: FontWeight.bold,
                        fontSize: 12, // –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä
                      ),
                      overflow: TextOverflow.ellipsis,
                      maxLines: 1,
                    ),
                    const SizedBox(height: 2),
                    Text(
                      description,
                      style: const TextStyle(
                        color: Colors.grey,
                        fontSize: 10, // –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä
                      ),
                      overflow: TextOverflow.ellipsis,
                      maxLines: 1, // –û–≥—Ä–∞–Ω–∏—á–∏–ª–∏ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π
                    ),
                  ],
                ),
              ),
              const SizedBox(width: 8),
              ElevatedButton(
                onPressed: onButtonPressed,
                style: ElevatedButton.styleFrom(
                  backgroundColor: const Color(0xFF02C076),
                  padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 6), // –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
                  minimumSize: const Size(0, 32), // –£–º–µ–Ω—å—à–∏–ª–∏ –≤—ã—Å–æ—Ç—É
                ),
                child: Text(
                  buttonText,
                  style: const TextStyle(
                    fontSize: 10, // –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä
                    color: Colors.white,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
              if (onDismiss != null)
                IconButton(
                  icon: const Icon(Icons.close, color: Colors.grey, size: 16), // –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä
                  onPressed: onDismiss,
                  padding: EdgeInsets.zero,
                  constraints: const BoxConstraints(minWidth: 28, minHeight: 28), // –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä
                ),
            ],
          ),
        ),
      ),
    );
  }
}